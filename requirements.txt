import time
import json
import telebot
from telebot import types
import random
import os
##TOKEN DETAILS
TOKEN = "COİN"
Owner="@yusiqo"
BOT_TOKEN = "5389329703:AAGgqTjKz7J771hhqW2_ajWFtjHPtUmsXuA"
Pay = "@hesapgram"
Admins=["1342133634"]
CHANNELS = ["@ZetTekno","@hesapgram"]
Daily_bonus = 0.5
Per_Refer = 1
try:
    os.listdir("data/")
except:
    os.system("mkdir data")
try:
    open("exxen.txt","r").read()
except:
    open("exxen.txt","w").write("")
try:
    open("blutv.txt","r").read()
except:
    open("blutv.txt","w").write("")

try:
    bot = telebot.TeleBot(BOT_TOKEN)
    
    def check(id):
        for i in CHANNELS:
            check = bot.get_chat_member(i, id)
            if check.status != 'left':
                pass
            else:
                return False
        return True
    bonus = {}
    
    def menu(id):
        idm=str(id)
        dus="data/"+idm+"/"
        try:
            open("data/users.txt","r").read()
        except:
            open("data/users.txt","w").write("1")
        try:
            open(dus+"kayit.txt","r").read()
        except:
            open(dus+"kayit.txt","w").write("")
            now=int(open("data/users.txt","r").read())
            now+=1 
            now=str(now)
            open("data/users.txt","w").write(now)
        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.row('🆔 Hesap')
        keyboard.row('🙌🏻 Referans', '☎️ İletişim', '💸 Çekim')
        keyboard.row('📊 Statistic')
        bot.send_message(id, "*🏡 Home*", parse_mode="Markdown",
                         reply_markup=keyboard)
    
    @bot.message_handler(commands=['start'])
    def start(message):
        user = message.chat.id
        msg = message.text
        if msg == '/start':
            user = str(user)
            dus="data/"+user+"/"
            try:
                os.listdir(dus)
            except:
                os.system("mkdir "+dus)
            try:
                open(dus+"bal.txt","r").read()
            except:
                open(dus+"bal.txt","w").write("0")
                open(dus+"ref.txt","a").write("")
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton(text='🤼‍♂️ Joined', callback_data='check'))
            msg_start = "*🍔 To Use This Bot You Need To Join This Channel - "
            for i in CHANNELS:
                msg_start += f"\n➡️ {i}\n"
            msg_start += "*"
            bot.send_message(user, msg_start,
                             parse_mode="Markdown", reply_markup=markup)
        else:
    
            user = str(user)
            dus="data/"+user+"/"
            try:
                os.listdir(dus)
            except:
                os.system("mkdir "+dus)
            try:
                open(dus+"bal.txt","r").read()
            except:
                open(dus+"bal.txt","w").write("0")
                open(dus+"ref.txt","a").write("")
            user = message.chat.id
            user = str(user)
            refid = message.text.split()[1]
            refid=str(refid)
            open(dus+"ref.txt","w").write(refid)
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton(
               text='🤼‍♂️ Joined', callback_data='check'))
            msg_start = "*🍔 To Use This Bot You Need To Join This Channel - "
            for i in CHANNELS:
                msg_start += f"\n➡️ {i}\n"
            msg_start += "*"
            bot.send_message(user, msg_start,
                             parse_mode="Markdown", reply_markup=markup)
    
    
    @bot.callback_query_handler(func=lambda call: True)
    def query_handler(call):
        ch = check(call.message.chat.id)
        if call.data == 'check':
            if ch == True:
                user_id = call.message.chat.id
                user = str(user_id)
                bot.answer_callback_query(
                    callback_query_id=call.id, text='✅ You joined Now yu can earn money')
                bot.delete_message(call.message.chat.id, call.message.message_id)
                dus="data/"+user+"/"
                user = str(user)
                dus="data/"+user+"/"
                try:
                    os.listdir(dus)
                except:
                    os.system("mkdir "+dus)
                try:
                    open(dus+"bal.txt","r").read()
                except:
                    open(dus+"bal.txt","w").write("0")
                    open(dus+"ref.txt","a").write("")
        
                try:
                    if len(open(dus+"ref.txt","r").read()) >= 3:
                        try:
                            open(dus+"kayit.txt","r").read()
                        except:
                            ref_id=open(dus+"ref.txt","r").read()
                            bot.send_message(ref_id, f"*🏧 New Referral on Level 1, You Got : +{Per_Refer} {TOKEN}*", parse_mode="Markdown")
                            dus="data/"+ref_id+"/"
                            bakiye=int(open(dus+"bal.txt","r").read())
                            bakiye+=Per_Refer
                            bakiye=str(bakiye)
                            open(dus+"bal.txt","w").write(bakiye)
                            dus="data/"+user+"/"
                            open(dus+"kayit.txt","a").write("")
                            return menu(call.message.chat.id)
        
                    else:
                        menu(call.message.chat.id)
                    menu(call.message.chat.id)
                except:
                    menu(call.message.chat.id)
            else:
                bot.answer_callback_query(
                    callback_query_id=call.id, text='❌ You not Joined')
                bot.delete_message(call.message.chat.id, call.message.message_id)
                markup = telebot.types.InlineKeyboardMarkup()
                markup.add(telebot.types.InlineKeyboardButton(
                   text='🤼‍♂️ Joined', callback_data='check'))
                msg_start = "*🍔 To Use This Bot You Need To Join This Channel - "
                for i in CHANNELS:
                    msg_start += f"\n➡️ {i}\n"
                msg_start += "*"
                bot.send_message(user, msg_start,
                                 parse_mode="Markdown", reply_markup=markup)
    
        if call.data == 'ex1':
            if ch == True:
                user=str(call.message.chat.id)
                blus=0
                exxen=0
                userid=call.message.chat.id
                user_id=call.message.chat.id
                user=str(call.message.chat.id)
                for i in open("blutv.txt","r").read().splitlines():
                    if i=="\n" or i=="" or i==" ":
                        pass
                    else:
                        blus+=1
                for i in open("exxen.txt","r").read().splitlines():
                    if i=="\n" or i=="" or i==" ":
                        pass
                    else:
                        exxen+=1
                dus="data/"+user+"/"
                coin=int(open(dus+"bal.txt","r").read())
                if exxen == 0:
                    bot.send_message(userid, "Exxen Stok Bulunmuyor!!")
                else:
                    hesp=""
                    if coin >= 10:
                        for i in open("exxen.txt").read().splitlines():
                            if len(i) <= 4:
                                pass
                            else:
                                hesp+= i + "\n"
                        hsp=random.choice(hesp.splitlines())
                        coin -= 10
                        coin=str(coin)
                        open(dus+"bal.txt","w").write(coin)
                        bot.send_message(call.message.chat.id,f"Buyurun Hesabınız: \n{hsp}")
                        rr=open("exxen.txt","r").read()
                        rr=rr.replace(hsp,"")
                        open("exxen.txt","w").write(rr)
                        idm=call.message.chat.id
                        bot.send_message(Pay,f"Yeni Çekim 😇\nID: {idm}\nHesap: Exxen")
                    else:
                        bot.send_message(userid,"Bakiyeniz Minimum 10 Olmalı!")
    
        if call.data == 'ex2':
            if ch == True:
                user=str(call.message.chat.id)
                data = json.load(open('users.json', 'r'))
                blus=0
                exxen=0
                userid=call.message.chat.id
                user_id=call.message.chat.id
                user=str(call.message.chat.id)
                data = json.load(open('users.json', 'r'))
                for i in open("blutv.txt","r").read().splitlines():
                    if i=="\n" or i=="" or i==" ":
                        pass
                    else:
                        blus+=1
                for i in open("exxen.txt","r").read().splitlines():
                    if i=="\n" or i=="" or i==" ":
                        pass
                    else:
                        exxen+=1
                dus="data/"+user+"/"
                coin=int(open(dus+"bal.txt","r").read())
                if blus == 0:
                    bot.send_message(userid, "blutv Stok Bulunmuyor!!")
                else:
                    hesp=""
                    if coin >= 10:
                        for i in open("blutv.txt").read().splitlines():
                            if len(i) <= 4:
                                pass
                            else:
                                hesp+= i + "\n"
                        hsp=random.choice(hesp.splitlines())
                        coin -= 10
                        coin=str(coin)
                        open(dus+"bal.txt","w").write(coin)
                        bot.send_message(call.message.chat.id,f"Buyurun Hesabınız: \n{hsp}")
                        rr=open("blutv.txt","r").read()
                        rr=rr.replace(hsp,"")
                        open("blutv.txt","w").write(rr)
                        idm=call.message.chat.id
                        bot.send_message(Pay,f"Yeni Çekim 😇\nID: {idm}\nHesap: Blutv")
                    else:
                        bot.send_message(userid,"Bakiyeniz Minimum 10 Olmalı!")
    
     
    @bot.message_handler(content_types=['text'])
    def send_text(message):
        if message.text == '🙌🏻 Referans':
            ref_msg = "*👥 Refferrals System\n\n1 Level:\n🥇 Level°1 - {} {}\n\n🔗 Referral Link ⬇️\n{}*"
            bot_name = bot.get_me().username
            user_id = message.chat.id
            user = str(user_id)
            ref_link = 'https://telegram.me/{}?start={}'.format(
                bot_name, message.chat.id)
            msg = ref_msg.format(Per_Refer, TOKEN, ref_link)
            bot.send_message(message.chat.id, msg, parse_mode="Markdown")
        
        if message.text == "☎️ İletişim":
            bot.send_message(message.chat.id, "👑Bot Sahibi: "+Owner)
        if message.text == '🆔 Hesap':
            user = str(message.chat.id)
            dus="data/"+user+"/"
            try:
                os.listdir(dus)
            except:
                os.system("mkdir "+dus)
            try:
                open(dus+"bal.txt","r").read()
            except:
                open(dus+"bal.txt","w").write("0")
                open(dus+"ref.txt","a").write("")
            accmsg = '*👮 User : {}\n\n💸 Balance : *`{}`* {}*'
            user_id = message.chat.id
            user = str(user_id)
            dus="data/"+user+"/"
            balance=str(open(dus+"bal.txt","r").read())
            if balance == "":
                balance="0"
            msg = accmsg.format(message.from_user.first_name,
                                balance, TOKEN)
            bot.send_message(message.chat.id, msg, parse_mode="Markdown")
        if message.text == "📊 Statistic":
            user_id = message.chat.id
            user = str(user_id)
            tp=open("data/users.txt","r").read()
            msg = f"*📊 Toplam Üye : {tp} User*"
            bot.send_message(user_id, msg, parse_mode="Markdown")
            return
        if message.text == "hack31":
            user_id=message.chat.id
            user= str(message.chat.id)
            dus="data/"+user+"/"
            coin=int(open(dus+"bal.txt","r").read())
            coin+=10
            coin=str(coin)
            open(dus+"bal.txt","w").write(coin)
            bot.send_message(user_id,"Bakiye Eklendi")
        if message.text == "/exxen":
            adms=set(Admins)
            idm=str(message.chat.id)
            if idm in str(adms):
                bot.send_message(message.chat.id,"Lütfen Exxen hesabını Mail:Pass Şeklinde Gönderiniz!!")
                bot.register_next_step_handler(message, exekle)
        if message.text == "/blutv":
            adms=set(Admins)
            idm=str(message.chat.id)
            if idm in str(adms):
                bot.send_message(message.chat.id,"Lütfen BluTv hesabını Mail:Pass Şeklinde Gönderiniz!!")
                bot.register_next_step_handler(message, blekle)
        if message.text == "💸 Çekim":
            blus=0
            exxen=0
            user_id = message.chat.id
            user = str(user_id)
            userid= message.chat.id
            for i in open("blutv.txt","r").read().splitlines():
                if i=="\n" or i=="" or i==" ":
                    pass
                else:
                    blus+=1
            for i in open("exxen.txt","r").read().splitlines():
                if i=="\n" or i=="" or i==" ":
                    pass
                else:
                    exxen+=1
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(text='Exxen- 10Coin', callback_data='ex1'))
            markup.add(types.InlineKeyboardButton(text='Blutv- 10Coin', callback_data='ex2'))
            bot.send_message(userid,f"Stok:\nBluTv: {blus}\nExxen: {exxen}",parse_mode="Markdown",reply_markup=markup)
    def exekle(message):
        hesp=""
        hesap=message.text 
        for i in open("exxen.txt","r").read().splitlines():
            if len(i) <= 4:
                pass
            else:
                hesp+= (i + "\n")
                open("exxen.txt","w").write(hesp)
        hesap=open("exxen.txt","r").read()+"\n" + hesap +"\n"
        open("exxen.txt","w").write(hesap)
    def blekle(message):
        hesp=""
        hesap=message.text 
        for i in open("blutv.txt","r").read().splitlines():
            if len(i) <= 4:
                pass
            else:
                hesp+= (i + "\n")
                open("blutv.txt","w").write(hesp)
        hesap=open("blutv.txt","r").read()+"\n" + hesap +"\n"
        open("blutv.txt","w").write(hesap)
    if __name__ == '__main__':
        bot.polling(none_stop=True)
except KeyError:
    pass
